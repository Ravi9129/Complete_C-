using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace RaviwithCsharp.Day-4
{
    public class 6_params Modifier
    {
        
    }
}
--------------------------------------------------------
params Kya Hota Hai?
âœ… params ek parameter modifier hai jo method ko variable number of arguments accept karne ki ability deta hai.
âœ… Matlab, ek hi method ko multiple arguments pass kar sakte hain bina overload likhne ki zaroorat.
âœ… Yeh internally ek array create karta hai, jo sabhi values ko store karta hai.
âœ… params argument list ka last parameter hona chahiye.
-----------------------------------------------------------
ðŸš€ 1. Simple Example of params
âœ… Scenario: Ek method hai jo multiple numbers ka sum calculate karti hai, bina overloads likhne ke.

using System;

class Program
{
    static int AddNumbers(params int[] numbers) // âœ… `params` allows multiple values
    {
        int sum = 0;
        foreach (int num in numbers)
        {
            sum += num;
        }
        return sum;
    }

    static void Main()
    {
        Console.WriteLine(AddNumbers(1, 2, 3, 4, 5)); // âœ… Output: 15
        Console.WriteLine(AddNumbers(10, 20, 30)); // âœ… Output: 60
    }
}
ðŸ“Œ Output:
15
60
ðŸ“Œ Yahan params ka use karke hum ek hi method me multiple arguments pass kar rahe hain, bina overload likhne ki zaroorat.
-----------------------------------------------------------------
ðŸš€ 2. params with Strings (Joining Words)
âœ… Scenario: Ek method hai jo multiple words ko concatenate karke ek string banati hai.

using System;

class Program
{
    static string JoinWords(params string[] words)
    {
        return string.Join(" ", words);
    }

    static void Main()
    {
        Console.WriteLine(JoinWords("Hello", "World!")); // âœ… Output: "Hello World!"
        Console.WriteLine(JoinWords("I", "am", "learning", "C#")); // âœ… Output: "I am learning C#"
    }
}
ðŸ“Œ Output:
Hello World!
I am learning C#
ðŸ“Œ Yahan params ka use karke multiple words ko ek string me combine kar rahe hain.
----------------------------------------------------------------
ðŸš€ 3. params with Mixed Parameters
âœ… Scenario: Ek method hai jo ek fixed argument ke saath multiple values accept karti hai.

using System;

class Program
{
    static void DisplayNames(string prefix, params string[] names)
    {
        foreach (var name in names)
        {
            Console.WriteLine($"{prefix} {name}");
        }
    }

    static void Main()
    {
        DisplayNames("Mr.", "Ali", "Ahmed", "Sara");
    }
}
ðŸ“Œ Output:
Mr. Ali
Mr. Ahmed
Mr. Sara
ðŸ“Œ Yahan params ko ek normal argument ke saath use kiya gaya hai, lekin params hamesha last me hona chahiye.
----------------------------------------------------------
ðŸš€ 4. params with Objects (Different Data Types)
âœ… Scenario: Ek method hai jo different types ke values ko print kar sakti hai.

using System;

class Program
{
    static void PrintValues(params object[] values)
    {
        foreach (var value in values)
        {
            Console.WriteLine($"Value: {value} (Type: {value.GetType()})");
        }
    }

    static void Main()
    {
        PrintValues(10, "Hello", 3.14, true);
    }
}
ðŸ“Œ Output:
Value: 10 (Type: System.Int32)
Value: Hello (Type: System.String)
Value: 3.14 (Type: System.Double)
Value: True (Type: System.Boolean)
ðŸ“Œ Yahan params object[] ka use karke different types ke values ko accept kiya gaya hai.
---------------------------------------------------------
ðŸš€ 5. params vs Normal Array Argument
ðŸ“Œ Example of Normal Array Argument:

static void PrintArray(int[] numbers)
{
    foreach (var num in numbers)
        Console.WriteLine(num);
}
-----------------------------
ðŸ“Œ Example of params:

static void PrintParams(params int[] numbers)
{
    foreach (var num in numbers)
        Console.WriteLine(num);
}
------------------------------------------------------
ðŸš€ 6. Real-World Scenario: Logging System
âœ… Scenario: Ek logger hai jo multiple messages accept karta hai aur unhe print karta hai.

using System;

class Logger
{
    public static void LogMessages(params string[] messages)
    {
        foreach (string msg in messages)
        {
            Console.WriteLine($"[LOG]: {msg}");
        }
    }
}

class Program
{
    static void Main()
    {
        Logger.LogMessages("System started", "User logged in", "Database connected");
    }
}
ðŸ“Œ Output:
[LOG]: System started
[LOG]: User logged in
[LOG]: Database connected
ðŸ“Œ Yahan params ka use karke ek logging system banaya gaya hai jo multiple messages accept kar sakta hai.
------------------------------------------------------------
ðŸš€ Conclusion
âœ… params ka use tab hota hai jab method ko variable number of arguments accept karne chahiye.
âœ… Yeh array ki tarah kaam karta hai, lekin call karne ke time par hume array pass nahi karna padta.
âœ… Common uses include mathematical operations, string joining, logging systems, and data printing.