using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace RaviwithCsharp.Day-3
{
    public class 14_default arguments 
    {
        
    }
}
---------------------------------------------------------
C# me default arguments ka concept tab kaam aata hai jab kisi method ke parameters ke liye default values define karni ho.
ðŸ”¹ Agar method call karte waqt koi argument pass nahi karte, to default value use hoti hai.
ðŸ”¹ Yeh optional parameters ka ek tarika hai jo code readability aur flexibility badhata hai.
ðŸ”¹ Mostly overload methods ki jagah use hota hai jahan same function ko different parameters ke sath call karna ho.
------------------------------------------------------------
ðŸš€ 1. Basic Example of Default Arguments
âœ… Scenario: Ek method jo user ka naam greet kare, lekin agar naam pass na ho to default "Guest" ho.
using System;

class Program  
{  
    static void GreetUser(string name = "Guest")  
    {  
        Console.WriteLine("Welcome, " + name + "!");  
    }  

    static void Main()  
    {  
        GreetUser("Amit");  // âœ… Argument pass kiya  
        GreetUser();        // âœ… Default value use hogi  
    }  
}
ðŸ“Œ Output:
Welcome, Amit!
Welcome, Guest!
ðŸ“Œ Agar GreetUser("Amit") call kiya to "Amit" print hua.
ðŸ“Œ Agar GreetUser() call kiya bina argument ke, to "Guest" print hua.
----------------------------------------------------------
ðŸš€ 2. Multiple Default Parameters
âœ… Scenario: Ek method jo product ka naam aur price print kare, lekin agar price pass na ho to default â‚¹100 ho.

using System;

class Program  
{  
    static void ShowProduct(string product = "Laptop", double price = 100.00)  
    {  
        Console.WriteLine("Product: " + product + ", Price: â‚¹" + price);  
    }  

    static void Main()  
    {  
        ShowProduct("Mobile", 50000);  // âœ… Custom values  
        ShowProduct("Tablet");         // âœ… Default price â‚¹100 use hoga  
        ShowProduct();                 // âœ… Dono default values use hongi  
    }  
}
ðŸ“Œ Output:
Product: Mobile, Price: â‚¹50000
Product: Tablet, Price: â‚¹100
Product: Laptop, Price: â‚¹100
ðŸ“Œ Agar dono arguments diye to wahi use honge.
ðŸ“Œ Agar sirf product diya to price ka default use hoga.
ðŸ“Œ Agar kuch na diya to dono default values aayengi.
-------------------------------------------------------------------------------
ðŸš€ 3. Default Arguments with Method Overloading
âœ… Scenario: Ek method jo salary calculate kare, agar tax pass na ho to default 10% ka tax lagaye.

using System;

class Program  
{  
    static double CalculateSalary(double salary, double tax = 10)  
    {  
        return salary - (salary * tax / 100);  
    }  

    static void Main()  
    {  
        Console.WriteLine("Salary after Tax: â‚¹" + CalculateSalary(50000, 5));  // âœ… Custom tax  
        Console.WriteLine("Salary after Default Tax: â‚¹" + CalculateSalary(50000));  // âœ… Default tax 10%  
    }  
}
ðŸ“Œ Output:
Salary after Tax: â‚¹47500
Salary after Default Tax: â‚¹45000
ðŸ“Œ Agar 5% tax diya to wahi calculate hoga.
ðŸ“Œ Agar tax na diya to default 10% ka tax apply hoga.

ðŸš€ 4. Default Arguments with Named Parameters
âœ… Scenario: Ek method jo student details print kare, lekin agar koi argument pass na ho to default value use ho.
---------------------------------------------------------
using System;

class Program  
{  
    static void ShowStudent(string name = "Unknown", int age = 18, string city = "Delhi")  
    {  
        Console.WriteLine($"Name: {name}, Age: {age}, City: {city}");  
    }  

    static void Main()  
    {  
        ShowStudent();  // âœ… Sab default values  
        ShowStudent("Rahul");  // âœ… Age aur city default rahenge  
        ShowStudent(age: 22);  // âœ… Sirf age pass ki, baaki default  
        ShowStudent(city: "Mumbai");  // âœ… Sirf city pass ki  
    }  
}
ðŸ“Œ Output:

Name: Unknown, Age: 18, City: Delhi
Name: Rahul, Age: 18, City: Delhi
Name: Unknown, Age: 22, City: Delhi
Name: Unknown, Age: 18, City: Mumbai
ðŸ“Œ Yeh feature named parameters ke sath kaafi useful hota hai jisme hum kisi bhi argument ko selectively pass kar sakte hain.
-------------------------------------------------------------------------
ðŸš€ 5. Default Arguments in Real-World Scenario
âœ… Scenario: E-commerce website me agar user shipping method select nahi kare to default 'Standard Shipping' apply ho.

using System;

class Order  
{  
    public static void PlaceOrder(string product, string shippingMethod = "Standard Shipping")  
    {  
        Console.WriteLine($"Order placed for {product} with {shippingMethod}");  
    }  
}

class Program  
{  
    static void Main()  
    {  
        Order.PlaceOrder("Laptop", "Express Shipping");  // âœ… Custom shipping  
        Order.PlaceOrder("Mobile");  // âœ… Default shipping  
    }  
}
ðŸ“Œ Output:

Order placed for Laptop with Express Shipping
Order placed for Mobile with Standard Shipping
ðŸ“Œ Agar user shippingMethod specify kare to wahi use hoga.
ðŸ“Œ Agar user shippingMethod specify na kare to Standard Shipping apply hoga.

---------------------------------------
ðŸš€ Conclusion
ðŸ”¹ Agar kisi method ke parameters optional hone chahiye to default arguments ka use karna best practice hai.
ðŸ”¹ Yeh overload methods ki jagah zyada readable aur maintainable code likhne me madad karta hai.
ðŸ”¹ Default arguments ko named parameters ke sath combine karna ek powerful feature hai.